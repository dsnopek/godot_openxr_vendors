# Workflow to publish the Godot openxr libraries to MavenCentral on release
name: MavenCentral Publish

on:
  release:
    # We'll run this workflow when a new GitHub release is created
    types: [published]
  workflow_dispatch: {}

env:
  # This is ovr_openxr_mobile_sdk v77.
  META_OPENXR_HEADERS_URL: 'https://securecdn-ord5-3.oculus.com/binaries/download/?id=23875289988749597'

jobs:
  publish:
    name: Release build and publish
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python (for SCons)
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Android dependencies
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
          link-to-sdk: true
      - name: Install scons
        run: |
          python -m pip install scons==4.0.0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 17
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Download Meta OpenXR Preview headers
        run: |
          # PowerShell (ick!) works on all GitHub platforms. I don't like it, but it works.
          Invoke-WebRequest -Uri "${{ env.META_OPENXR_HEADERS_URL }}" -OutFile "ovr_openxr_mobile_sdk.zip"
          Expand-Archive -Path "ovr_openxr_mobile_sdk.zip" -DestinationPath "ovr_openxr_mobile_sdk"
        shell: pwsh

        # Builds the release artifacts of the library
      - name: Release build
        run: |
          scons platform=android target=template_debug arch=arm64 custom_api_file=thirdparty/godot_cpp_gdextension_api/extension_api.json build_profile=thirdparty/godot_cpp_build_profile/build_profile.json meta_headers=../ovr_openxr_mobile_sdk/OpenXR/meta_openxr_preview/
          scons platform=android target=template_release arch=arm64 custom_api_file=thirdparty/godot_cpp_gdextension_api/extension_api.json build_profile=thirdparty/godot_cpp_build_profile/build_profile.json meta_headers=../ovr_openxr_mobile_sdk/OpenXR/meta_openxr_preview/
          scons platform=android target=template_debug arch=x86_64 custom_api_file=thirdparty/godot_cpp_gdextension_api/extension_api.json build_profile=thirdparty/godot_cpp_build_profile/build_profile.json meta_headers=../ovr_openxr_mobile_sdk/OpenXR/meta_openxr_preview/
          scons platform=android target=template_release arch=x86_64 custom_api_file=thirdparty/godot_cpp_gdextension_api/extension_api.json build_profile=thirdparty/godot_cpp_build_profile/build_profile.json meta_headers=../ovr_openxr_mobile_sdk/OpenXR/meta_openxr_preview/
          ./gradlew -Prelease_version=${{ github.ref_name }} -Pmeta_headers=../ovr_openxr_mobile_sdk/OpenXR/meta_openxr_preview/ build

        # Runs upload, and then closes & releases the repository
      - name: Publish to MavenCentral
        run: ./gradlew -Prelease_version=${{ github.ref_name }} publishAllPublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_GROUP_ID: ${{ secrets.OSSRH_GROUP_ID }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
